// üß™ SIMULA√á√ÉO COMPLETA: EXPEDI√á√ÉO M√ÅXIMA EM UMA CAIXA
// Este arquivo simula uma expedi√ß√£o completa com m√∫ltiplos itens

console.log("üöÄ SIMULA√á√ÉO COMPLETA: EXPEDI√á√ÉO M√ÅXIMA EM UMA CAIXA");
console.log("=" .repeat(70));

// üìä ESTADO INICIAL SIMULADO (grade com m√∫ltiplos itens)
const estadoInicial = {
    formData: {
        CODDEBARRASLEITURA: '',
        ITEM_SELECIONADO: null,
        ESCOLA_GRADE: null,
        QUANTIDADELIDA: '0',
        QUANTIDADENACAIXAATUAL: '0',
        NUMERODACAIXA: '',
    },
    grade: {
        itensGrade: [
            { id: 1, quantidade: 5, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true, nome: "Item A" },
            { id: 2, quantidade: 3, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true, nome: "Item B" },
            { id: 3, quantidade: 4, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true, nome: "Item C" },
            { id: 4, quantidade: 2, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true, nome: "Item D" }
        ]
    }
};

// üîß FUN√á√ïES SIMULADAS (C√ìDIGO CORRIGIDO)
function calcularTotalExpedido(grade) {
    return grade.itensGrade.reduce((totini, itemGrade) => {
        return totini + itemGrade.quantidadeExpedida;
    }, 0);
}

function abrirTelaExped(item, grade, formData) {
    const totalExpedido = calcularTotalExpedido(grade);
    
    const escolaGrade = {
        totalExpedido: totalExpedido,
        totalAExpedir: 14 - totalExpedido, // Total da grade: 5+3+4+2 = 14
        grade: grade
    };
    
    return escolaGrade;
}

// ‚úÖ FUN√á√ÉO CORRIGIDA (C√ìDIGO AP√ìS CORRE√á√ÉO)
function handleEscolaGradeSelecionada_CORRIGIDA(escolaGrade, formData) {
    return {
        ...formData,
        // ‚úÖ CORRE√á√ÉO: Preservar estado local se j√° existe contabiliza√ß√£o
        ESCOLA_GRADE: (formData.ESCOLA_GRADE?.totalExpedido ?? 0) > 0 
            ? formData.ESCOLA_GRADE 
            : escolaGrade,
        QUANTIDADELIDA: formData.QUANTIDADELIDA !== '0' 
            ? formData.QUANTIDADELIDA 
            : String(escolaGrade?.totalExpedido ?? 0),
    };
}

function processarCodigoDeBarras(formData, quantidade = 1) {
    // Simula a expedi√ß√£o de N itens
    const novoFormData = { ...formData };
    novoFormData.ITEM_SELECIONADO.quantidadeExpedida += quantidade;
    novoFormData.ITEM_SELECIONADO.qtyPCaixa += quantidade;
    novoFormData.ESCOLA_GRADE.totalExpedido += quantidade;
    novoFormData.ESCOLA_GRADE.totalAExpedir -= quantidade;
    novoFormData.QUANTIDADELIDA = String(Number(novoFormData.QUANTIDADELIDA) + quantidade);
    novoFormData.QUANTIDADENACAIXAATUAL = String(Number(novoFormData.QUANTIDADENACAIXAATUAL) + quantidade);
    
    return novoFormData;
}

function fecharTelaExped(formData) {
    return {
        ...formData,
        ITEM_SELECIONADO: null,
    };
}

function gerarCaixa(formData) {
    console.log(`\nüì¶ GERANDO CAIXA:`);
    console.log(`   üìä Total expedido: ${formData.ESCOLA_GRADE.totalExpedido}`);
    console.log(`   üìä Quantidade na caixa atual: ${formData.QUANTIDADENACAIXAATUAL}`);
    console.log(`   üìä Itens na caixa:`);
    
    // Simula a lista de itens que apareceria na caixa
    const grade = formData.ESCOLA_GRADE.grade;
    grade.itensGrade.forEach(item => {
        if (item.quantidadeExpedida > 0) {
            console.log(`      ‚úÖ ${item.nome}: ${item.quantidadeExpedida}/${item.quantidade}`);
        }
    });
    
    return {
        ...formData,
        QUANTIDADENACAIXAATUAL: '0',
        NUMERODACAIXA: String(Number(formData.NUMERODACAIXA || '0') + 1)
    };
}

// üß™ SIMULA√á√ÉO COMPLETA
console.log("\nüöÄ SIMULA√á√ÉO COMPLETA: EXPEDI√á√ÉO M√ÅXIMA");
console.log("-" .repeat(50));

let estado = { ...estadoInicial };
let grade = { ...estadoInicial.grade };

console.log("üìã ESTADO INICIAL:");
console.log(`   Grade: ${grade.itensGrade.map(item => `${item.nome}: ${item.quantidadeExpedida}/${item.quantidade}`).join(', ')}`);
console.log(`   Total a expedir: 14 itens`);

// 1. EXPEDIR ITEM A (5 itens)
console.log("\n1Ô∏è‚É£ EXPEDINDO ITEM A (5 itens)...");
const itemA = grade.itensGrade[0];
estado.formData.ITEM_SELECIONADO = itemA;
const escolaGradeA = abrirTelaExped(itemA, grade, estado.formData);
estado.formData = handleEscolaGradeSelecionada_CORRIGIDA(escolaGradeA, estado.formData);
console.log(`   ‚úÖ Modal aberto - QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);

estado.formData = processarCodigoDeBarras(estado.formData, 5);
console.log(`   ‚úÖ Item A expedido - QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}, QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);

estado.formData = fecharTelaExped(estado.formData);
console.log(`   ‚úÖ Modal fechado - Estado preservado: QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);

// 2. EXPEDIR ITEM B (3 itens) - TESTE DA CORRE√á√ÉO!
console.log("\n2Ô∏è‚É£ EXPEDINDO ITEM B (3 itens) - TESTE DA CORRE√á√ÉO...");
const itemB = grade.itensGrade[1];
estado.formData.ITEM_SELECIONADO = itemB;
const escolaGradeB = abrirTelaExped(itemB, grade, estado.formData);
console.log(`   üìä ANTES da corre√ß√£o:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
console.log(`      escolaGradeB.totalExpedido: ${escolaGradeB.totalExpedido}`);

estado.formData = handleEscolaGradeSelecionada_CORRIGIDA(escolaGradeB, estado.formData);
console.log(`   üìä DEPOIS da corre√ß√£o:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);

estado.formData = processarCodigoDeBarras(estado.formData, 3);
console.log(`   ‚úÖ Item B expedido - QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}, QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);

estado.formData = fecharTelaExped(estado.formData);
console.log(`   ‚úÖ Modal fechado - Estado preservado: QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);

// 3. EXPEDIR ITEM C (4 itens) - TESTE DA CORRE√á√ÉO!
console.log("\n3Ô∏è‚É£ EXPEDINDO ITEM C (4 itens) - TESTE DA CORRE√á√ÉO...");
const itemC = grade.itensGrade[2];
estado.formData.ITEM_SELECIONADO = itemC;
const escolaGradeC = abrirTelaExped(itemC, grade, estado.formData);
console.log(`   üìä ANTES da corre√ß√£o:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
console.log(`      escolaGradeC.totalExpedido: ${escolaGradeC.totalExpedido}`);

estado.formData = handleEscolaGradeSelecionada_CORRIGIDA(escolaGradeC, estado.formData);
console.log(`   üìä DEPOIS da corre√ß√£o:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);

estado.formData = processarCodigoDeBarras(estado.formData, 4);
console.log(`   ‚úÖ Item C expedido - QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}, QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);

estado.formData = fecharTelaExped(estado.formData);
console.log(`   ‚úÖ Modal fechado - Estado preservado: QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);

// 4. EXPEDIR ITEM D (2 itens) - TESTE FINAL DA CORRE√á√ÉO!
console.log("\n4Ô∏è‚É£ EXPEDINDO ITEM D (2 itens) - TESTE FINAL DA CORRE√á√ÉO...");
const itemD = grade.itensGrade[3];
estado.formData.ITEM_SELECIONADO = itemD;
const escolaGradeD = abrirTelaExped(itemD, grade, estado.formData);
console.log(`   üìä ANTES da corre√ß√£o:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
console.log(`      escolaGradeD.totalExpedido: ${escolaGradeD.totalExpedido}`);

estado.formData = handleEscolaGradeSelecionada_CORRIGIDA(escolaGradeD, estado.formData);
console.log(`   üìä DEPOIS da corre√ß√£o:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);

estado.formData = processarCodigoDeBarras(estado.formData, 2);
console.log(`   ‚úÖ Item D expedido - QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}, QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);

estado.formData = fecharTelaExped(estado.formData);
console.log(`   ‚úÖ Modal fechado - Estado preservado: QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);

// 5. GERAR CAIXA
console.log("\n5Ô∏è‚É£ GERANDO CAIXA...");
estado.formData = gerarCaixa(estado.formData);

// 6. VERIFICAR RESULTADO FINAL
console.log("\n6Ô∏è‚É£ RESULTADO FINAL:");
console.log(`   üìä QUANTIDADELIDA final: ${estado.formData.QUANTIDADELIDA}`);
console.log(`   üìä ESCOLA_GRADE.totalExpedido final: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
console.log(`   üìä QUANTIDADENACAIXAATUAL final: ${estado.formData.QUANTIDADENACAIXAATUAL}`);
console.log(`   üìä N√∫mero da caixa: ${estado.formData.NUMERODACAIXA}`);

// Verificar se todos os itens foram contabilizados corretamente
const totalExpedidoEsperado = 5 + 3 + 4 + 2; // 14
const totalExpedidoReal = Number(estado.formData.QUANTIDADELIDA);

if (totalExpedidoReal === totalExpedidoEsperado) {
    console.log(`\n   ‚úÖ SUCESSO TOTAL! Todos os ${totalExpedidoEsperado} itens foram contabilizados corretamente!`);
    console.log(`   ‚úÖ A corre√ß√£o funcionou perfeitamente em todos os casos!`);
} else {
    console.log(`\n   ‚ùå FALHA! Esperado: ${totalExpedidoEsperado}, Obtido: ${totalExpedidoReal}`);
}

console.log("\n" + "=" .repeat(70));
console.log("üéØ CONCLUS√ÉO: A corre√ß√£o preserva o estado local");
console.log("   em expedi√ß√µes complexas com m√∫ltiplos itens,");
console.log("   garantindo que nenhuma contabiliza√ß√£o seja perdida!");
