// üß™ TESTE DA CORRE√á√ÉO DO BUG
// Este arquivo testa se a corre√ß√£o implementada resolve o problema

console.log("üîß TESTE DA CORRE√á√ÉO DO BUG");
console.log("=" .repeat(60));

// üìä ESTADO INICIAL SIMULADO
const estadoInicial = {
    formData: {
        CODDEBARRASLEITURA: '',
        ITEM_SELECIONADO: null,
        ESCOLA_GRADE: null,
        QUANTIDADELIDA: '0',
        QUANTIDADENACAIXAATUAL: '0',
        NUMERODACAIXA: '',
    },
    grade: {
        itensGrade: [
            { id: 1, quantidade: 10, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true },
            { id: 2, quantidade: 5, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true },
            { id: 3, quantidade: 8, quantidadeExpedida: 0, qtyPCaixa: 0, isCount: true }
        ]
    }
};

// üîß FUN√á√ïES SIMULADAS
function calcularTotalExpedido(grade) {
    return grade.itensGrade.reduce((totini, itemGrade) => {
        return totini + itemGrade.quantidadeExpedida;
    }, 0);
}

function abrirTelaExped(item, grade, formData) {
    const totalExpedido = calcularTotalExpedido(grade);
    
    const escolaGrade = {
        totalExpedido: totalExpedido,
        totalAExpedir: 23 - totalExpedido,
        grade: grade
    };
    
    return escolaGrade;
}

// ‚úÖ FUN√á√ÉO CORRIGIDA (C√ìDIGO AP√ìS CORRE√á√ÉO)
function handleEscolaGradeSelecionada_CORRIGIDA(escolaGrade, formData) {
    return {
        ...formData,
        // ‚úÖ CORRE√á√ÉO: Preservar estado local se j√° existe contabiliza√ß√£o
        ESCOLA_GRADE: formData.ESCOLA_GRADE?.totalExpedido > 0 
            ? formData.ESCOLA_GRADE 
            : escolaGrade,
        QUANTIDADELIDA: formData.QUANTIDADELIDA !== '0' 
            ? formData.QUANTIDADELIDA 
            : String(escolaGrade?.totalExpedido),
    };
}

function processarCodigoDeBarras(formData, itemId) {
    // Simula a expedi√ß√£o de 1 item
    const novoFormData = { ...formData };
    novoFormData.ITEM_SELECIONADO.quantidadeExpedida += 1;
    novoFormData.ITEM_SELECIONADO.qtyPCaixa += 1;
    novoFormData.ESCOLA_GRADE.totalExpedido += 1;
    novoFormData.ESCOLA_GRADE.totalAExpedir -= 1;
    novoFormData.QUANTIDADELIDA = String(Number(novoFormData.QUANTIDADELIDA) + 1);
    novoFormData.QUANTIDADENACAIXAATUAL = String(Number(novoFormData.QUANTIDADENACAIXAATUAL) + 1);
    
    return novoFormData;
}

function fecharTelaExped(formData) {
    return {
        ...formData,
        ITEM_SELECIONADO: null,
    };
}

// üß™ TESTE: DEMONSTRA√á√ÉO DA CORRE√á√ÉO
console.log("\nüîß TESTE: DEMONSTRA√á√ÉO DA CORRE√á√ÉO");
console.log("-" .repeat(50));

let estado = { ...estadoInicial };
let grade = { ...estadoInicial.grade };

console.log("üìã ESTADO INICIAL:");
console.log(`   Grade: ${grade.itensGrade.map(item => `Item ${item.id}: ${item.quantidadeExpedida}/${item.quantidade}`).join(', ')}`);
console.log(`   formData.QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`   formData.QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);

// 1. Selecionar Item 1
console.log("\n1Ô∏è‚É£ SELECIONANDO ITEM 1...");
const item1 = grade.itensGrade[0];
estado.formData.ITEM_SELECIONADO = item1;
const escolaGrade1 = abrirTelaExped(item1, grade, estado.formData);
estado.formData = handleEscolaGradeSelecionada_CORRIGIDA(escolaGrade1, estado.formData);
console.log(`   ‚úÖ Modal de expedi√ß√£o aberto`);
console.log(`   üìä QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`   üìä QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);
console.log(`   üìä totalExpedido: ${escolaGrade1.totalExpedido}`);

// 2. Expedir Item 1
console.log("\n2Ô∏è‚É£ EXPEDINDO ITEM 1...");
estado.formData = processarCodigoDeBarras(estado.formData, 1);
console.log(`   ‚úÖ Item 1 expedido com sucesso`);
console.log(`   üìä QUANTIDADELIDA ap√≥s expedi√ß√£o: ${estado.formData.QUANTIDADELIDA}`);
console.log(`   üìä QUANTIDADENACAIXAATUAL ap√≥s expedi√ß√£o: ${estado.formData.QUANTIDADENACAIXAATUAL}`);
console.log(`   üìä totalExpedido ap√≥s expedi√ß√£o: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
console.log(`   üìä Item 1 quantidadeExpedida: ${estado.formData.ITEM_SELECIONADO.quantidadeExpedida}`);

// 3. Fechar modal de expedi√ß√£o
console.log("\n3Ô∏è‚É£ FECHANDO MODAL DE EXPEDI√á√ÉO...");
estado.formData = fecharTelaExped(estado.formData);
console.log(`   ‚úÖ Modal fechado`);
console.log(`   üìä QUANTIDADELIDA preservada: ${estado.formData.QUANTIDADELIDA}`);
console.log(`   üìä QUANTIDADENACAIXAATUAL preservada: ${estado.formData.QUANTIDADENACAIXAATUAL}`);
console.log(`   üìä ESCOLA_GRADE preservada: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);

// 4. IMPORTANTE: A grade N√ÉO foi atualizada (como acontece na sua aplica√ß√£o)
console.log("\n4Ô∏è‚É£ GRADE N√ÉO ATUALIZADA (como na sua aplica√ß√£o)...");
console.log(`   üìä Grade ainda mostra: Item 1 quantidadeExpedida = ${grade.itensGrade[0].quantidadeExpedida}`);
console.log(`   üìä Mas formData tem: QUANTIDADELIDA = ${estado.formData.QUANTIDADELIDA}`);

// 5. Selecionar Item 2 (TESTE DA CORRE√á√ÉO!)
console.log("\n5Ô∏è‚É£ SELECIONANDO ITEM 2...");
const item2 = grade.itensGrade[1];
estado.formData.ITEM_SELECIONADO = item2;
const escolaGrade2 = abrirTelaExped(item2, grade, estado.formData);
console.log(`   üìä ANTES de handleEscolaGradeSelecionada_CORRIGIDA:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
console.log(`      escolaGrade2.totalExpedido: ${escolaGrade2.totalExpedido}`);

estado.formData = handleEscolaGradeSelecionada_CORRIGIDA(escolaGrade2, estado.formData);
console.log(`   üìä DEPOIS de handleEscolaGradeSelecionada_CORRIGIDA:`);
console.log(`      QUANTIDADELIDA: ${estado.formData.QUANTIDADELIDA}`);
console.log(`      QUANTIDADENACAIXAATUAL: ${estado.formData.QUANTIDADENACAIXAATUAL}`);
console.log(`      ESCOLA_GRADE.totalExpedido: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);

// 6. Verificar resultado
console.log("\n6Ô∏è‚É£ RESULTADO:");
if (estado.formData.QUANTIDADELIDA === '1') {
    console.log(`   ‚úÖ CORRE√á√ÉO FUNCIONOU! Contabiliza√ß√£o preservada`);
    console.log(`   üìä QUANTIDADELIDA final: ${estado.formData.QUANTIDADELIDA}`);
    console.log(`   üìä ESCOLA_GRADE.totalExpedido final: ${estado.formData.ESCOLA_GRADE.totalExpedido}`);
} else {
    console.log(`   ‚ùå CORRE√á√ÉO FALHOU! Contabiliza√ß√£o perdida`);
    console.log(`   üìä QUANTIDADELIDA final: ${estado.formData.QUANTIDADELIDA}`);
    console.log(`   üìä Esperado: 1, Obtido: ${estado.formData.QUANTIDADELIDA}`);
}

console.log("\n" + "=" .repeat(60));
console.log("üéØ CONCLUS√ÉO: A corre√ß√£o preserva o estado local");
console.log("   quando j√° existe contabiliza√ß√£o, evitando que");
console.log("   dados da grade desatualizada sobrescrevam o estado!");
